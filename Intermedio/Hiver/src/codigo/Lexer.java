/* The following code was generated by JFlex 1.4.3 on 12/10/21 21:15 */

package codigo;
import static codigo.Tokens.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 12/10/21 21:15 from the specification file
 * <tt>src/codigo/lexer.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\3\1\12\2\0\1\12\22\0\1\72\1\14\1\112\1\35"+
    "\1\35\1\14\1\14\1\13\1\16\1\17\1\15\1\10\1\30\1\21"+
    "\1\11\1\33\1\4\11\2\1\27\1\111\1\31\1\22\1\32\1\35"+
    "\1\35\1\54\1\63\1\67\1\61\1\7\1\52\1\106\1\70\1\43"+
    "\2\1\1\6\1\110\1\44\1\53\1\103\1\1\1\71\1\74\1\42"+
    "\1\62\1\101\1\76\1\100\1\45\1\1\1\24\1\34\1\25\1\14"+
    "\1\20\1\35\1\51\1\57\1\64\1\55\1\60\1\46\1\105\1\65"+
    "\1\37\2\1\1\47\1\107\1\40\1\50\1\104\1\1\1\66\1\73"+
    "\1\36\1\56\1\102\1\75\1\77\1\41\1\1\1\23\1\5\1\26"+
    "\43\0\1\35\16\0\1\35\3\0\1\35\12\0\1\35\u1f59\0\1\35"+
    "\2\0\1\14\udfe3\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\4\1\3\1\1\1\2"+
    "\1\5\1\6\1\1\1\7\1\10\1\11\1\6\1\12"+
    "\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22"+
    "\1\23\1\24\1\1\1\6\40\2\1\25\1\6\2\26"+
    "\2\27\1\30\1\31\2\30\1\32\2\3\2\2\1\0"+
    "\2\2\1\0\1\33\1\26\2\30\1\0\1\26\1\0"+
    "\1\33\1\0\1\26\1\31\1\0\1\26\2\0\1\34"+
    "\1\33\1\35\1\36\1\37\1\40\1\0\1\4\3\2"+
    "\1\41\1\42\6\2\1\41\7\2\1\43\11\2\1\44"+
    "\7\2\1\44\34\2\1\0\1\27\1\3\1\0\1\3"+
    "\2\0\1\30\2\32\2\0\2\27\1\2\1\30\1\2"+
    "\1\26\1\2\1\3\1\45\1\2\2\0\3\30\1\0"+
    "\2\31\1\0\2\31\2\0\1\33\1\0\3\2\1\46"+
    "\1\2\1\47\11\2\1\50\2\2\1\51\1\52\4\2"+
    "\1\51\3\2\1\53\3\2\1\53\25\2\1\54\4\2"+
    "\1\55\4\2\1\3\1\0\3\56\1\0\1\56\1\0"+
    "\3\32\1\0\1\26\1\30\1\57\1\60\2\30\1\31"+
    "\3\0\3\31\1\0\1\31\1\0\1\4\1\2\1\61"+
    "\1\62\1\2\1\63\1\64\25\2\1\65\13\2\1\66"+
    "\2\2\1\67\1\70\1\71\2\2\6\56\1\0\1\32"+
    "\1\0\6\31\1\0\1\31\1\4\1\2\1\72\1\2"+
    "\1\73\1\74\2\2\1\75\16\2\1\76\1\77\1\100"+
    "\2\2\1\101\2\2\1\56\1\0\1\56\1\31\2\0"+
    "\1\31\1\0\1\31\3\2\1\102\2\2\1\103\5\2"+
    "\1\104\1\105\1\106\2\2\1\31\1\0\2\31\1\0"+
    "\1\107\2\2\1\110\1\111\1\112\2\2\1\113\1\114";

  private static int [] zzUnpackAction() {
    int [] result = new int[434];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\113\0\226\0\341\0\u012c\0\u0177\0\u01c2\0\u020d"+
    "\0\u0258\0\u02a3\0\u02ee\0\u0339\0\u0339\0\u0339\0\u0384\0\u0258"+
    "\0\u03cf\0\u0384\0\u0384\0\u0384\0\u0384\0\u02a3\0\u0339\0\u041a"+
    "\0\u0465\0\u04b0\0\u0339\0\u04fb\0\u0546\0\u0591\0\u05dc\0\u0627"+
    "\0\u0672\0\u06bd\0\u0708\0\u0753\0\u079e\0\u07e9\0\u0834\0\u087f"+
    "\0\u08ca\0\u0915\0\u0960\0\u09ab\0\u09f6\0\u0a41\0\u0a8c\0\u0ad7"+
    "\0\u0b22\0\u0b6d\0\u0bb8\0\u0c03\0\u0c4e\0\u0c99\0\u0ce4\0\u0d2f"+
    "\0\u0d7a\0\u0dc5\0\u0e10\0\u0e5b\0\113\0\113\0\u0ea6\0\113"+
    "\0\u0ef1\0\u0f3c\0\u0f87\0\113\0\u0fd2\0\u101d\0\u1068\0\u10b3"+
    "\0\u10fe\0\u1149\0\u1194\0\u11df\0\u122a\0\u1275\0\u0339\0\u0339"+
    "\0\u12c0\0\u130b\0\u1356\0\u13a1\0\u13ec\0\u1437\0\u02a3\0\u0384"+
    "\0\u1482\0\u14cd\0\u1518\0\u1563\0\u15ae\0\u15f9\0\113\0\u0384"+
    "\0\u0339\0\u0339\0\u0339\0\u0339\0\u1644\0\u168f\0\u16da\0\u1725"+
    "\0\u1770\0\u17bb\0\226\0\u1806\0\u1851\0\u189c\0\u18e7\0\u1932"+
    "\0\u197d\0\u19c8\0\u1a13\0\u1a5e\0\u1aa9\0\u1af4\0\u1b3f\0\u1b8a"+
    "\0\u1bd5\0\226\0\u1c20\0\u1c6b\0\u1cb6\0\u1d01\0\u1d4c\0\u1d97"+
    "\0\u1de2\0\u1e2d\0\u1e78\0\u1ec3\0\u1f0e\0\u1f59\0\u1fa4\0\u1fef"+
    "\0\u203a\0\u2085\0\u20d0\0\u211b\0\u2166\0\u21b1\0\u21fc\0\u2247"+
    "\0\u2292\0\u22dd\0\u2328\0\u2373\0\u23be\0\u2409\0\u2454\0\u249f"+
    "\0\u24ea\0\u2535\0\u2580\0\u25cb\0\u2616\0\u2661\0\u26ac\0\u26f7"+
    "\0\u2742\0\u278d\0\u27d8\0\u2823\0\u286e\0\u28b9\0\u2904\0\u294f"+
    "\0\u299a\0\u29e5\0\u2a30\0\u2a7b\0\u2ac6\0\u2b11\0\u2b5c\0\u2ba7"+
    "\0\u2bf2\0\u2c3d\0\u2c88\0\u2cd3\0\u2d1e\0\u2d69\0\u2db4\0\u2dff"+
    "\0\u2e4a\0\u2e95\0\u2ee0\0\u2f2b\0\226\0\u2f76\0\u2fc1\0\u300c"+
    "\0\113\0\u3057\0\u30a2\0\u30ed\0\u3138\0\u3183\0\u31ce\0\u3219"+
    "\0\u3264\0\u32af\0\u32fa\0\u1644\0\u3345\0\u3390\0\u33db\0\u3426"+
    "\0\226\0\u3471\0\226\0\u34bc\0\u3507\0\u3552\0\u359d\0\u35e8"+
    "\0\u3633\0\u367e\0\u36c9\0\u3714\0\226\0\u375f\0\u37aa\0\u37f5"+
    "\0\226\0\u3840\0\u388b\0\u38d6\0\u3921\0\u396c\0\u39b7\0\u3a02"+
    "\0\u3a4d\0\u3a98\0\u3ae3\0\u3b2e\0\u3b79\0\u3bc4\0\u3c0f\0\u3c5a"+
    "\0\u3ca5\0\u3cf0\0\u3d3b\0\u3d86\0\u3dd1\0\u3e1c\0\u3e67\0\u3eb2"+
    "\0\u3efd\0\u3f48\0\u3f93\0\u3fde\0\u4029\0\u4074\0\u40bf\0\u410a"+
    "\0\u4155\0\u41a0\0\u41eb\0\226\0\u4236\0\u4281\0\u42cc\0\u4317"+
    "\0\226\0\u4362\0\u43ad\0\u43f8\0\u4443\0\u448e\0\u44d9\0\u4524"+
    "\0\u456f\0\u45ba\0\u4605\0\u4650\0\u469b\0\113\0\u46e6\0\u4731"+
    "\0\u4731\0\u477c\0\u47c7\0\226\0\226\0\u30ed\0\u4812\0\u485d"+
    "\0\u48a8\0\u48f3\0\u493e\0\u4989\0\u49d4\0\u4a1f\0\u4a6a\0\u4ab5"+
    "\0\u4b00\0\u0339\0\u4b4b\0\226\0\226\0\u4b96\0\226\0\226"+
    "\0\u4be1\0\u4c2c\0\u4c77\0\u4cc2\0\u4d0d\0\u4d58\0\u4da3\0\u4dee"+
    "\0\u4e39\0\u4e84\0\u4ecf\0\u4f1a\0\u4f65\0\u4fb0\0\u4ffb\0\u5046"+
    "\0\u5091\0\u50dc\0\u5127\0\u5172\0\u51bd\0\226\0\u5208\0\u5253"+
    "\0\u529e\0\u52e9\0\u5334\0\u537f\0\u53ca\0\u5415\0\u5460\0\u54ab"+
    "\0\u54f6\0\226\0\u5541\0\u558c\0\226\0\226\0\226\0\u55d7"+
    "\0\u5622\0\u566d\0\u56b8\0\u5703\0\u574e\0\u5799\0\u57e4\0\u582f"+
    "\0\u587a\0\u58c5\0\u5910\0\u595b\0\u59a6\0\u59f1\0\u5a3c\0\u5a87"+
    "\0\u5ad2\0\u5b1d\0\113\0\u5b68\0\226\0\u5bb3\0\226\0\226"+
    "\0\u5bfe\0\u5c49\0\226\0\u5c94\0\u5cdf\0\u5d2a\0\u5d75\0\u5dc0"+
    "\0\u5e0b\0\u5e56\0\u5ea1\0\u5eec\0\u5f37\0\u5f82\0\u5fcd\0\u6018"+
    "\0\u6063\0\226\0\226\0\226\0\u60ae\0\u60f9\0\226\0\u6144"+
    "\0\u618f\0\u61da\0\u6225\0\u6270\0\u62bb\0\u6306\0\u6351\0\u15f9"+
    "\0\u639c\0\u63e7\0\u6432\0\u647d\0\u64c8\0\226\0\u6513\0\u655e"+
    "\0\226\0\u65a9\0\u65f4\0\u663f\0\u668a\0\u66d5\0\226\0\226"+
    "\0\226\0\u6720\0\u676b\0\u67b6\0\u67b6\0\u6801\0\u684c\0\u684c"+
    "\0\226\0\u6897\0\u68e2\0\226\0\226\0\226\0\u692d\0\u6978"+
    "\0\226\0\226";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[434];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\3\1\10"+
    "\1\11\1\12\1\5\1\13\1\12\1\14\1\15\1\16"+
    "\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26"+
    "\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36"+
    "\1\37\1\3\1\40\1\41\1\42\1\3\1\43\1\3"+
    "\1\44\1\45\1\46\1\47\1\50\1\51\1\3\1\52"+
    "\1\53\1\54\1\3\1\55\1\56\1\3\1\57\1\60"+
    "\1\3\1\61\1\5\1\62\1\63\1\64\1\65\1\66"+
    "\1\3\1\67\1\70\1\71\1\72\2\3\1\73\1\74"+
    "\1\75\1\76\114\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\34\3\1\0\16\3\3\0\1\101"+
    "\1\4\1\0\1\4\1\0\1\101\1\102\1\0\1\103"+
    "\1\0\1\104\1\105\3\0\1\106\2\0\4\106\1\105"+
    "\5\0\1\107\22\101\1\102\11\101\1\0\16\101\5\0"+
    "\1\5\6\0\1\5\57\0\1\5\21\0\1\101\1\4"+
    "\1\0\1\4\1\0\1\110\1\102\1\0\1\103\1\0"+
    "\1\104\1\105\3\0\1\106\2\0\4\106\1\105\5\0"+
    "\1\107\11\101\1\110\10\101\1\102\11\101\1\0\16\101"+
    "\4\0\1\111\1\0\1\4\107\0\1\3\1\112\1\0"+
    "\1\112\1\0\1\113\1\3\1\114\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\1\114\5\0\1\77\5\0\1\77"+
    "\6\3\1\115\25\3\1\0\5\3\1\116\10\3\4\0"+
    "\1\111\1\0\1\4\3\0\1\117\1\120\2\0\21\117"+
    "\57\0\1\121\1\122\1\0\1\123\1\124\1\121\1\125"+
    "\1\126\1\127\2\0\1\12\3\117\1\130\1\126\1\117"+
    "\4\130\1\12\5\117\1\34\22\121\1\125\11\121\1\0"+
    "\16\121\3\0\1\131\1\132\1\0\1\132\1\133\1\131"+
    "\1\134\1\135\1\136\1\0\1\137\5\136\1\135\13\136"+
    "\1\0\22\131\1\134\11\131\1\136\16\131\12\0\1\117"+
    "\1\120\2\0\21\117\57\0\1\121\1\122\1\0\1\123"+
    "\1\124\1\121\1\125\1\126\1\140\2\0\1\130\3\117"+
    "\1\130\1\126\1\117\5\130\5\117\1\0\22\121\1\125"+
    "\11\121\1\0\16\121\12\0\1\117\1\120\2\0\6\117"+
    "\1\141\12\117\66\0\1\117\1\120\2\0\6\117\1\142"+
    "\7\117\1\143\2\117\66\0\1\117\1\120\2\0\6\117"+
    "\1\144\12\117\66\0\1\117\1\120\2\0\1\117\1\145"+
    "\15\117\1\146\1\117\57\0\1\121\4\0\2\121\1\0"+
    "\1\34\2\0\1\34\12\0\1\34\5\0\1\34\34\121"+
    "\1\0\16\121\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\1\3\1\147\1\3\1\150\24\3"+
    "\1\151\3\3\1\0\16\3\3\0\2\3\1\0\1\3"+
    "\1\0\2\3\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\2\3\1\152\5\3"+
    "\1\153\23\3\1\0\16\3\3\0\2\3\1\0\1\3"+
    "\1\0\2\3\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\12\3\1\154\1\155"+
    "\4\3\1\156\13\3\1\0\16\3\3\0\2\3\1\0"+
    "\1\3\1\0\2\3\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\5\3\1\157"+
    "\1\3\1\160\23\3\1\161\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\6\3"+
    "\1\162\5\3\1\153\17\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\16\3"+
    "\1\163\5\3\1\164\7\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\11\3"+
    "\1\165\1\166\1\167\4\3\1\170\13\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\20\3\1\171\7\3\1\172\3\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\2\3\1\173\25\3\1\174\3\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\1\175\1\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\15\3\1\176\1\177\5\3\1\200\7\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\24\3\1\201\7\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\33\3\1\202\1\0\16\3\3\0\2\3\1\0"+
    "\1\3\1\0\2\3\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\1\3\1\203"+
    "\10\3\1\204\7\3\1\205\11\3\1\0\16\3\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\12\3\1\206\21\3\1\0\16\3\3\0\1\3\1\112"+
    "\1\0\1\112\1\0\2\3\1\114\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\1\114\5\0\1\77\5\0\1\77"+
    "\2\3\1\207\6\3\1\210\22\3\1\0\4\3\1\211"+
    "\11\3\3\0\2\3\1\0\1\3\1\0\1\3\1\212"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\5\3\1\213\7\3\1\214\16\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\15\3\1\215\16\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\12\3\1\216\14\3\1\217\4\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\22\3\1\220\11\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\15\3"+
    "\1\221\14\3\1\222\1\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\1\3\1\223\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\34\3\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\1\224\10\3\1\225\14\3"+
    "\1\226\5\3\1\0\2\3\1\227\13\3\3\0\2\3"+
    "\1\0\1\3\1\0\1\230\1\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\4\3\1\231\24\3\1\232\2\3\1\0\3\3\1\233"+
    "\12\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\13\3\1\234\13\3\1\235\4\3\1\0"+
    "\16\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\16\3\1\236\13\3\1\237\1\3\1\0"+
    "\16\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\12\3\1\240\21\3\1\0\16\3\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\15\3\1\241\16\3\1\0\16\3\3\0\2\3\1\0"+
    "\1\3\1\0\2\3\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\12\3\1\242"+
    "\21\3\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\5\3\1\243\26\3\1\0"+
    "\16\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\1\3\1\244\32\3\1\0\16\3\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\12\3\1\245\1\246\20\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\15\3"+
    "\1\247\1\250\15\3\1\0\16\3\3\0\1\121\4\0"+
    "\2\121\1\0\1\77\2\0\1\77\12\0\1\77\5\0"+
    "\1\77\34\121\1\0\16\121\3\0\2\101\1\0\1\101"+
    "\1\251\2\101\1\251\1\252\2\0\1\252\3\0\1\101"+
    "\1\251\5\0\1\252\5\0\1\252\34\101\1\0\16\101"+
    "\3\0\1\101\1\253\1\0\1\253\1\251\2\101\1\254"+
    "\1\252\2\0\1\252\3\0\1\101\1\254\5\0\1\252"+
    "\5\0\1\252\34\101\1\0\16\101\4\0\1\255\1\0"+
    "\1\255\1\256\1\0\1\257\1\256\1\260\2\0\1\105"+
    "\3\0\1\106\1\256\1\0\4\106\1\105\5\0\1\107"+
    "\22\0\1\257\34\0\1\261\1\0\1\262\1\263\1\0"+
    "\1\264\1\263\1\105\2\0\1\105\3\0\1\106\1\263"+
    "\1\0\4\106\1\105\5\0\1\107\22\0\1\264\43\0"+
    "\1\106\2\0\1\106\3\0\1\106\2\0\5\106\65\0"+
    "\1\261\1\0\1\262\1\263\1\0\1\264\1\263\1\107"+
    "\2\0\1\107\4\0\1\263\5\0\1\107\5\0\1\107"+
    "\22\0\1\264\33\0\2\101\1\0\1\101\1\251\2\101"+
    "\1\251\1\265\1\0\1\104\1\265\3\0\1\266\1\251"+
    "\1\0\4\106\1\265\5\0\1\252\34\101\1\0\16\101"+
    "\3\0\1\101\1\111\1\0\1\111\1\0\1\110\1\102"+
    "\1\0\1\103\1\0\1\104\1\105\3\0\1\106\2\0"+
    "\4\106\1\105\5\0\1\107\11\101\1\110\10\101\1\102"+
    "\11\101\1\0\16\101\3\0\1\267\1\112\1\0\1\112"+
    "\1\0\2\267\1\0\1\270\1\0\1\104\1\270\3\0"+
    "\1\271\2\0\4\106\1\270\5\0\1\272\34\267\1\0"+
    "\16\267\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\34\3\1\0\1\3\1\273\14\3\4\0"+
    "\1\274\1\0\1\274\107\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\23\3\1\275\10\3\1\0"+
    "\16\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\5\3\1\276\26\3\1\0\16\3\3\0"+
    "\2\121\1\0\1\121\1\0\2\121\10\0\1\121\15\0"+
    "\34\121\1\0\16\121\4\0\1\122\1\0\1\122\2\0"+
    "\1\277\1\0\1\300\46\0\1\277\34\0\1\122\1\0"+
    "\1\122\1\0\1\301\1\277\1\0\1\300\35\0\1\301"+
    "\10\0\1\277\34\0\1\302\1\0\1\122\107\0\1\121"+
    "\1\303\1\0\1\303\1\0\2\121\1\304\7\0\1\121"+
    "\1\304\14\0\34\121\1\0\16\121\4\0\1\302\1\0"+
    "\1\122\3\0\1\117\1\120\2\0\21\117\57\0\2\131"+
    "\1\0\1\131\1\0\2\131\2\136\1\0\1\137\4\136"+
    "\1\131\14\136\1\0\34\131\1\136\16\131\3\0\1\305"+
    "\1\132\1\0\1\132\1\0\1\305\1\306\1\136\1\307"+
    "\1\0\1\137\21\136\1\0\22\305\1\306\11\305\1\136"+
    "\16\305\4\0\1\310\1\0\1\310\107\0\1\131\1\311"+
    "\1\0\1\311\1\0\2\131\1\312\1\136\1\0\1\137"+
    "\4\136\1\131\1\312\13\136\1\0\34\131\1\136\16\131"+
    "\3\0\1\136\1\132\1\0\1\132\1\0\4\136\1\0"+
    "\1\137\21\136\1\0\53\136\3\0\2\136\1\0\1\136"+
    "\1\0\4\136\1\0\1\137\21\136\1\0\53\136\2\0"+
    "\10\313\1\145\1\314\2\313\1\145\1\315\17\145\56\313"+
    "\12\146\1\0\100\146\1\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\2\3\1\316\31\3\1\0"+
    "\16\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\34\3\1\0\11\3\1\317\4\3\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\20\3\1\320\13\3\1\0\16\3\3\0\2\3\1\0"+
    "\1\3\1\0\2\3\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\1\321\33\3"+
    "\1\0\11\3\1\322\4\3\3\0\2\3\1\0\1\3"+
    "\1\0\2\3\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\1\323\33\3\1\0"+
    "\16\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\34\3\1\0\14\3\1\324\1\3\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\11\3\1\325\22\3\1\0\16\3\3\0\2\3\1\0"+
    "\1\3\1\0\2\3\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\6\3\1\326"+
    "\25\3\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\34\3\1\0\10\3\1\327"+
    "\5\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\24\3\1\330\7\3\1\0\16\3\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\4\3\1\321\27\3\1\0\10\3\1\331\5\3\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\34\3\1\0\15\3\1\332\3\0\2\3\1\0\1\3"+
    "\1\0\1\333\1\3\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\34\3\1\0"+
    "\16\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\12\3\1\334\21\3\1\0\16\3\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\30\3\1\335\3\3\1\0\16\3\3\0\2\3\1\0"+
    "\1\3\1\0\2\3\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\11\3\1\336"+
    "\22\3\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\2\3\1\337\31\3\1\0"+
    "\16\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\1\340\33\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\17\3"+
    "\1\341\14\3\1\0\16\3\3\0\2\3\1\0\1\3"+
    "\1\0\2\3\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\30\3\1\342\3\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\15\3\1\343\16\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\33\3\1\335\1\0\16\3\3\0\2\3\1\0"+
    "\1\3\1\0\1\344\1\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\34\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\6\3\1\345\25\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\4\3\1\346\27\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\33\3"+
    "\1\347\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\34\3\1\0\1\350\15\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\20\3\1\351\13\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\10\3"+
    "\1\352\23\3\1\0\16\3\3\0\2\3\1\0\1\3"+
    "\1\0\2\3\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\12\3\1\353\21\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\17\3\1\275\14\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\34\3\1\0\1\354\15\3\3\0\2\3\1\0"+
    "\1\3\1\0\2\3\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\1\3\1\355"+
    "\32\3\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\14\3\1\356\17\3\1\0"+
    "\16\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\34\3\1\0\1\3\1\357\14\3\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\24\3\1\360\7\3\1\0\16\3\3\0\2\3\1\0"+
    "\1\3\1\0\2\3\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\15\3\1\361"+
    "\16\3\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\2\3\1\362\31\3\1\0"+
    "\16\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\13\3\1\363\20\3\1\0\16\3\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\1\364\33\3\1\0\16\3\3\0\2\3\1\0\1\3"+
    "\1\0\2\3\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\6\3\1\365\25\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\16\3\1\366\15\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\4\3\1\367\27\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\13\3"+
    "\1\370\20\3\1\0\16\3\3\0\2\3\1\0\1\3"+
    "\1\0\2\3\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\22\3\1\371\11\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\13\3\1\372\20\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\1\3\1\373\32\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\1\3\1\374\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\34\3\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\16\3\1\375\15\3\1\0"+
    "\16\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\16\3\1\376\15\3\1\0\16\3\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\5\3\1\377\26\3\1\0\16\3\3\0\2\3\1\0"+
    "\1\3\1\0\2\3\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\1\3\1\u0100"+
    "\32\3\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\1\3\1\u0101\32\3\1\0"+
    "\16\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\5\3\1\u0102\26\3\1\0\16\3\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\5\3\1\u0103\26\3\1\0\16\3\3\0\2\3\1\0"+
    "\1\3\1\0\2\3\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\30\3\1\u0104"+
    "\3\3\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\1\u0105\1\3\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\5\3\1\u0106\26\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\1\3\1\u0107\7\3\1\u0108\22\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\6\3\1\u0109\25\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\2\3\1\u0109\31\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\17\3"+
    "\1\u010a\14\3\1\0\16\3\3\0\2\3\1\0\1\3"+
    "\1\0\2\3\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\34\3\1\0\4\3"+
    "\1\u010b\11\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\23\3\1\u010c\10\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\34\3\1\0\5\3\1\u010d\10\3\4\0\1\252"+
    "\1\0\1\252\107\0\1\101\1\252\1\0\1\252\1\251"+
    "\2\101\1\251\1\252\2\0\1\252\4\0\1\251\5\0"+
    "\1\252\5\0\1\252\34\101\1\0\16\101\3\0\1\101"+
    "\1\253\1\0\1\253\1\251\2\101\1\251\1\265\1\0"+
    "\1\104\1\265\3\0\1\266\1\251\1\0\4\106\1\265"+
    "\5\0\1\252\34\101\1\0\16\101\4\0\1\u010e\1\0"+
    "\1\u010e\107\0\1\101\1\255\1\0\1\255\1\u010f\1\101"+
    "\1\102\1\u010f\1\260\1\0\1\104\1\105\3\0\1\106"+
    "\1\u010f\1\0\4\106\1\105\5\0\1\107\22\101\1\102"+
    "\11\101\1\0\16\101\4\0\1\u0110\1\0\1\u0111\110\0"+
    "\1\u0112\1\0\1\u0112\3\0\1\u0113\10\0\1\u0113\73\0"+
    "\1\u0111\1\0\1\u0114\1\256\1\0\1\257\1\256\1\260"+
    "\2\0\1\105\3\0\1\106\1\256\1\0\4\106\1\105"+
    "\5\0\1\107\22\0\1\257\34\0\1\261\1\0\1\261"+
    "\2\0\1\264\1\0\1\u0115\46\0\1\264\34\0\1\261"+
    "\1\0\1\261\1\0\1\u0116\1\264\1\0\1\u0115\35\0"+
    "\1\u0116\10\0\1\264\34\0\1\u0117\1\0\1\261\110\0"+
    "\1\u0118\1\0\1\u0118\3\0\1\u0119\10\0\1\u0119\72\0"+
    "\1\101\1\252\1\0\1\252\1\251\2\101\1\251\1\265"+
    "\2\0\1\265\3\0\1\106\1\251\1\0\4\106\1\265"+
    "\5\0\1\252\34\101\1\0\16\101\3\0\2\101\1\0"+
    "\1\101\1\251\2\101\1\251\1\265\2\0\1\265\3\0"+
    "\1\266\1\251\1\0\4\106\1\265\5\0\1\252\34\101"+
    "\1\0\16\101\3\0\2\267\1\0\1\267\1\251\2\267"+
    "\1\251\1\252\1\0\1\100\1\252\3\0\1\267\1\251"+
    "\5\0\1\252\5\0\1\252\34\267\1\0\16\267\3\0"+
    "\1\121\1\261\1\0\1\262\1\263\1\121\1\u011a\1\263"+
    "\1\270\2\0\1\270\3\0\1\106\1\263\1\0\4\106"+
    "\1\270\5\0\1\272\22\121\1\u011a\11\121\1\0\16\121"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\u011b"+
    "\1\0\1\100\1\u011b\3\0\1\271\2\0\4\106\1\u011b"+
    "\5\0\1\77\34\3\1\0\16\3\3\0\1\121\1\261"+
    "\1\0\1\262\1\263\1\121\1\u011a\1\263\1\272\2\0"+
    "\1\272\4\0\1\263\5\0\1\272\5\0\1\272\22\121"+
    "\1\u011a\11\121\1\0\16\121\3\0\2\3\1\0\1\3"+
    "\1\0\1\3\1\u011c\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\34\3\1\0"+
    "\16\3\3\0\1\101\1\274\1\0\1\274\1\0\2\101"+
    "\1\0\1\105\1\0\1\104\1\105\3\0\1\106\2\0"+
    "\4\106\1\105\5\0\1\107\34\101\1\0\16\101\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\4\3\1\u011d\27\3\1\0\16\3\4\0\1\u011e\1\0"+
    "\1\u011e\3\0\1\304\10\0\1\304\73\0\1\u011f\1\0"+
    "\1\u011f\110\0\1\302\1\0\1\302\1\0\1\301\1\277"+
    "\1\0\1\300\35\0\1\301\10\0\1\277\33\0\1\121"+
    "\1\303\1\0\1\303\1\0\2\121\10\0\1\121\15\0"+
    "\34\121\1\0\16\121\4\0\1\u011e\1\0\1\u011e\107\0"+
    "\1\305\1\u0120\1\0\1\u0120\1\u0121\2\305\1\u0122\1\136"+
    "\1\0\1\137\4\136\1\305\1\u0122\13\136\1\0\34\305"+
    "\1\136\16\305\3\0\1\305\1\u0120\1\0\1\u0120\1\u0121"+
    "\2\305\1\u0123\1\136\1\0\1\137\4\136\1\305\1\u0123"+
    "\13\136\1\0\34\305\1\136\16\305\3\0\1\136\1\u0124"+
    "\1\0\1\u0124\1\0\4\136\1\0\1\137\21\136\1\0"+
    "\53\136\3\0\1\u0125\1\310\1\0\1\310\1\0\1\u0125"+
    "\1\u0126\1\0\1\u0127\24\0\22\u0125\1\u0126\11\u0125\1\0"+
    "\16\u0125\3\0\1\305\1\311\1\0\1\311\1\0\2\305"+
    "\2\136\1\0\1\137\4\136\1\131\14\136\1\0\34\305"+
    "\1\136\16\305\3\0\1\136\1\u0128\1\0\1\u0128\1\0"+
    "\4\136\1\0\1\137\21\136\1\0\53\136\2\0\15\313"+
    "\1\u0129\105\313\1\145\1\314\2\313\1\145\1\315\15\145"+
    "\1\u012a\1\145\56\313\1\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\3\3\1\u012b\30\3\1\0"+
    "\16\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\22\3\1\u012c\11\3\1\0\16\3\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\22\3\1\u012d\11\3\1\0\16\3\3\0\2\3\1\0"+
    "\1\3\1\0\2\3\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\20\3\1\u012e"+
    "\13\3\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\22\3\1\u012f\11\3\1\0"+
    "\16\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\11\3\1\u0130\22\3\1\0\16\3\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\7\3\1\u0131\24\3\1\0\16\3\3\0\2\3\1\0"+
    "\1\3\1\0\1\3\1\u012c\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\34\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\1\3"+
    "\1\u012d\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\34\3\1\0\16\3\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\24\3\1\u0132\7\3\1\0\16\3\3\0\2\3\1\0"+
    "\1\3\1\0\1\3\1\u012f\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\34\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\1\u0130"+
    "\1\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\34\3\1\0\16\3\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\13\3\1\u0133\20\3\1\0\16\3\3\0\2\3\1\0"+
    "\1\3\1\0\2\3\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\34\3\1\0"+
    "\1\u0134\15\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\26\3\1\u0135\5\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\34\3\1\0\11\3\1\u0136\4\3\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\13\3"+
    "\1\u0137\20\3\1\0\16\3\3\0\2\3\1\0\1\3"+
    "\1\0\2\3\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\16\3\1\u0138\15\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\34\3\1\0\1\3\1\u0139\14\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\31\3\1\u013a\2\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\34\3"+
    "\1\0\10\3\1\u013b\5\3\3\0\2\3\1\0\1\3"+
    "\1\0\2\3\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\16\3\1\u013c\15\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\34\3\1\0\11\3\1\u013d\4\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\21\3\1\u013e\12\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\13\3"+
    "\1\u013f\20\3\1\0\16\3\3\0\2\3\1\0\1\3"+
    "\1\0\2\3\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\11\3\1\u0140\22\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\22\3\1\u011c\11\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\1\u011d\33\3\1\0\16\3\3\0\2\3\1\0"+
    "\1\3\1\0\2\3\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\16\3\1\u0141"+
    "\15\3\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\34\3\1\0\10\3\1\u0142"+
    "\5\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\25\3\1\u0143\6\3\1\0\16\3\3\0"+
    "\2\3\1\0\1\3\1\0\1\u0144\1\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\34\3\1\0\16\3\3\0\2\3\1\0\1\3"+
    "\1\0\2\3\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\10\3\1\u0145\23\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\30\3\1\u0146\3\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\20\3\1\u0147\13\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\14\3"+
    "\1\u0148\17\3\1\0\16\3\3\0\2\3\1\0\1\3"+
    "\1\0\2\3\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\33\3\1\u0146\1\0"+
    "\16\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\24\3\1\u0149\7\3\1\0\16\3\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\30\3\1\u014a\3\3\1\0\16\3\3\0\2\3\1\0"+
    "\1\3\1\0\2\3\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\22\3\1\u014b"+
    "\11\3\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\11\3\1\u014c\22\3\1\0"+
    "\16\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\1\u014d\33\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\1\3\1\u014e\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\34\3\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\33\3\1\u014f\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\1\u0150\1\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\34\3\1\0\16\3\3\0\2\3\1\0"+
    "\1\3\1\0\2\3\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\4\3\1\u0151"+
    "\27\3\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\1\u0152\33\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\11\3\1\u0153\22\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\4\3"+
    "\1\u0152\27\3\1\0\16\3\3\0\2\3\1\0\1\3"+
    "\1\0\1\u0154\1\3\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\34\3\1\0"+
    "\16\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\4\3\1\u0155\27\3\1\0\16\3\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\23\3\1\u0156\10\3\1\0\16\3\3\0\2\3\1\0"+
    "\1\3\1\0\2\3\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\17\3\1\u0156"+
    "\14\3\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\1\u0155\33\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\22\3\1\u0157\11\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\u0158\6\0\1\77\5\0\1\77\34\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\1\3"+
    "\1\u0157\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\34\3\1\0\16\3\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\u0159\6\0\1\77\5\0\1\77"+
    "\34\3\1\0\16\3\3\0\1\101\1\u010e\1\0\1\u010e"+
    "\1\251\2\101\1\251\1\265\1\0\1\104\1\265\3\0"+
    "\1\106\1\251\1\0\4\106\1\265\5\0\1\252\34\101"+
    "\1\0\16\101\4\0\1\u015a\1\0\1\u015b\110\0\1\u0110"+
    "\1\0\1\u0110\1\u010f\1\u015c\1\257\1\u010f\1\u015d\7\0"+
    "\1\u010f\25\0\1\u015c\10\0\1\257\34\0\1\u0111\1\0"+
    "\1\u015e\1\u010f\1\0\1\257\1\u010f\1\u015d\7\0\1\u010f"+
    "\36\0\1\257\34\0\1\u0112\1\0\1\u015f\1\u010f\1\0"+
    "\1\u0160\1\u010f\1\u015d\7\0\1\u010f\36\0\1\u0160\34\0"+
    "\1\u0112\1\0\1\u0112\110\0\1\u0111\1\0\1\u015e\1\u010f"+
    "\1\u015c\1\257\1\u010f\1\u015d\7\0\1\u010f\25\0\1\u015c"+
    "\10\0\1\257\34\0\1\u0161\1\0\1\u0161\110\0\1\u0117"+
    "\1\0\1\u0117\1\0\1\u0116\1\264\1\0\1\u0115\35\0"+
    "\1\u0116\10\0\1\264\34\0\1\u0118\1\0\1\u0118\107\0"+
    "\2\121\1\0\1\121\1\0\2\121\1\u0119\7\0\1\121"+
    "\1\u0119\14\0\34\121\1\0\16\121\3\0\1\121\4\0"+
    "\2\121\1\0\1\u011b\2\0\1\u011b\3\0\1\106\2\0"+
    "\4\106\1\u011b\5\0\1\77\34\121\1\0\16\121\4\0"+
    "\1\u011f\1\0\1\u011f\2\0\1\277\50\0\1\277\33\0"+
    "\1\305\1\u0120\1\0\1\u0120\1\u0121\2\305\1\u0122\1\u0162"+
    "\1\0\1\137\4\136\1\305\1\u0122\13\136\1\0\34\305"+
    "\1\136\16\305\4\0\1\u0163\1\0\1\u0164\107\0\1\136"+
    "\1\u0165\1\0\1\u0166\1\0\4\136\1\0\1\137\21\136"+
    "\1\0\53\136\3\0\1\136\1\u0167\1\0\1\u0167\1\0"+
    "\4\136\1\0\1\137\21\136\1\0\53\136\3\0\1\305"+
    "\1\u0124\1\0\1\u0124\1\0\1\305\1\306\2\136\1\0"+
    "\1\137\21\136\1\0\22\305\1\306\11\305\1\136\16\305"+
    "\3\0\1\u0125\1\u0168\1\0\1\u0168\1\u0121\2\u0125\1\u0121"+
    "\7\0\1\u0125\1\u0121\14\0\34\u0125\1\0\16\u0125\3\0"+
    "\1\u0125\1\u0168\1\0\1\u0168\1\u0121\2\u0125\1\u0169\7\0"+
    "\1\u0125\1\u0169\14\0\34\u0125\1\0\16\u0125\4\0\1\u016a"+
    "\1\0\1\u016a\107\0\1\305\1\u0128\1\0\1\u0128\1\0"+
    "\2\305\2\136\1\0\1\137\21\136\1\0\34\305\1\136"+
    "\16\305\2\0\15\313\1\u0129\15\313\1\u016b\57\313\1\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\1\3\1\u016c\32\3\1\0\16\3\3\0\2\3\1\0"+
    "\1\3\1\0\2\3\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\1\u016d\33\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\5\3\1\u016e\26\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\4\3\1\u016d\27\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\1\u016f"+
    "\33\3\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\22\3\1\u0170\11\3\1\0"+
    "\16\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\1\u0171\33\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\20\3"+
    "\1\u0172\13\3\1\0\16\3\3\0\2\3\1\0\1\3"+
    "\1\0\2\3\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\3\3\1\u0173\30\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\4\3\1\u016f\27\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\1\3\1\u0170\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\34\3\1\0\16\3\3\0\2\3\1\0"+
    "\1\3\1\0\2\3\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\4\3\1\u0174"+
    "\27\3\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\24\3\1\u0175\7\3\1\0"+
    "\16\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\7\3\1\u0173\24\3\1\0\16\3\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\11\3\1\u0176\22\3\1\0\16\3\3\0\2\3\1\0"+
    "\1\3\1\0\2\3\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\11\3\1\u0177"+
    "\22\3\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\20\3\1\u0178\13\3\1\0"+
    "\16\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\22\3\1\u0179\11\3\1\0\16\3\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\24\3\1\u017a\7\3\1\0\16\3\3\0\2\3\1\0"+
    "\1\3\1\0\1\u017b\1\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\34\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\1\u017c"+
    "\1\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\34\3\1\0\16\3\3\0"+
    "\2\3\1\0\1\3\1\0\1\3\1\u017d\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\34\3\1\0\16\3\3\0\2\3\1\0\1\3"+
    "\1\0\2\3\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\1\3\1\u017e\32\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\30\3\1\u017f\3\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\5\3\1\u0180\26\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\33\3"+
    "\1\u0181\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\1\u0182\33\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\34\3\1\0\11\3\1\u0183\4\3\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\22\3"+
    "\1\u0184\11\3\1\0\16\3\3\0\2\3\1\0\1\3"+
    "\1\0\2\3\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\26\3\1\u0185\5\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\34\3\1\0\10\3\1\u0183\5\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\4\3\1\u0182\27\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\1\3\1\u0184\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\34\3\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\31\3\1\u0186\2\3\1\0"+
    "\16\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\22\3\1\u0187\11\3\1\0\16\3\3\0"+
    "\2\3\1\0\1\3\1\0\1\3\1\u0187\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\34\3\1\0\16\3\3\0\2\3\1\0\1\3"+
    "\1\0\2\3\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\34\3\1\0\7\3"+
    "\1\u0188\6\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\34\3\1\0\6\3\1\u0189\7\3"+
    "\4\0\1\u015a\1\0\1\u015a\1\u010f\1\u018a\1\u0160\1\u010f"+
    "\1\u018b\7\0\1\u010f\25\0\1\u018a\10\0\1\u0160\34\0"+
    "\1\u015b\1\0\1\u018c\1\u010f\1\0\1\u0160\1\u010f\1\u018b"+
    "\7\0\1\u010f\36\0\1\u0160\34\0\1\u015b\1\0\1\u018c"+
    "\1\u010f\1\0\1\u0160\1\u010f\1\u015d\7\0\1\u010f\36\0"+
    "\1\u0160\34\0\1\u0111\1\0\1\u0114\1\256\1\0\1\257"+
    "\1\256\1\u015d\7\0\1\256\36\0\1\257\34\0\1\u0111"+
    "\1\0\1\u015e\1\u010f\1\u018a\1\257\1\u010f\1\u015d\7\0"+
    "\1\u010f\25\0\1\u018a\10\0\1\257\34\0\1\u0112\1\0"+
    "\1\u015f\1\u010f\1\u018a\1\u0160\1\u010f\1\u015d\7\0\1\u010f"+
    "\25\0\1\u018a\10\0\1\u0160\34\0\1\u018a\1\0\1\u018a"+
    "\3\0\1\u018b\10\0\1\u018b\73\0\1\u0161\1\0\1\u0161"+
    "\2\0\1\264\50\0\1\264\33\0\1\136\1\u018d\1\0"+
    "\1\u018d\1\0\4\136\1\0\1\137\21\136\1\0\53\136"+
    "\4\0\1\u0163\1\0\1\u0163\1\0\1\104\1\u018e\1\0"+
    "\1\u018f\35\0\1\104\10\0\1\u018e\34\0\1\u0164\1\0"+
    "\1\u0164\2\0\1\u018e\1\0\1\u018f\46\0\1\u018e\33\0"+
    "\1\136\1\u0165\1\0\1\u0165\1\0\1\u0190\1\u0191\1\136"+
    "\1\u0162\1\0\1\137\21\136\1\0\11\136\1\u0190\10\136"+
    "\1\u0191\30\136\3\0\1\136\1\u0166\1\0\1\u0166\1\0"+
    "\1\136\1\u0191\1\136\1\u0162\1\0\1\137\21\136\1\0"+
    "\22\136\1\u0191\30\136\3\0\1\305\1\u0167\1\0\1\u0167"+
    "\1\0\2\305\1\136\1\u0162\1\0\1\137\21\136\1\0"+
    "\34\305\1\136\16\305\3\0\1\u0125\1\u0168\1\0\1\u0168"+
    "\1\u0121\2\u0125\1\u0121\1\u018f\6\0\1\u0125\1\u0121\14\0"+
    "\34\u0125\1\0\16\u0125\4\0\1\u0192\1\0\1\u0192\107\0"+
    "\1\u0125\1\u016a\1\0\1\u016a\1\0\1\u0125\1\u0126\26\0"+
    "\22\u0125\1\u0126\11\u0125\1\0\16\u0125\3\0\2\3\1\0"+
    "\1\3\1\0\2\3\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\2\3\1\u0193"+
    "\31\3\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\6\3\1\u0194\25\3\1\0"+
    "\16\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\1\3\1\u0195\32\3\1\0\16\3\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\1\u0196\33\3\1\0\16\3\3\0\2\3\1\0\1\3"+
    "\1\0\2\3\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\5\3\1\u0197\26\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\4\3\1\u0196\27\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\13\3\1\u0198\20\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\22\3"+
    "\1\u0199\11\3\1\0\16\3\3\0\2\3\1\0\1\3"+
    "\1\0\2\3\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\11\3\1\u019a\22\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\13\3\1\u019b\20\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\1\u019c\1\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\34\3\1\0\16\3\3\0\2\3\1\0"+
    "\1\3\1\0\2\3\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\16\3\1\u019d"+
    "\15\3\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\1\3\1\u0199\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\34\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\16\3\1\u019e\15\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\34\3"+
    "\1\0\12\3\1\u019f\3\3\3\0\2\3\1\0\1\3"+
    "\1\0\2\3\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\2\3\1\u01a0\31\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\34\3\1\0\13\3\1\u019f\2\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\6\3\1\u01a0\25\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\27\3"+
    "\1\u01a1\4\3\1\0\16\3\3\0\2\3\1\0\1\3"+
    "\1\0\2\3\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\32\3\1\u01a1\1\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\12\3\1\u01a2\21\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\15\3\1\u01a3\16\3\1\0\16\3\4\0\1\u015b"+
    "\1\0\1\u018c\1\u010f\1\0\1\u0160\1\u010f\10\0\1\u010f"+
    "\36\0\1\u0160\34\0\1\u018a\1\0\1\u018a\110\0\1\u015b"+
    "\1\0\1\u018c\1\u010f\1\u018a\1\u0160\1\u010f\1\u018b\7\0"+
    "\1\u010f\25\0\1\u018a\10\0\1\u0160\33\0\1\136\1\u018d"+
    "\1\0\1\u018d\1\0\1\136\1\u0191\2\136\1\0\1\137"+
    "\21\136\1\0\22\136\1\u0191\30\136\4\0\1\u01a4\1\0"+
    "\1\u01a4\3\0\1\u01a5\10\0\1\u01a5\73\0\1\u01a6\1\0"+
    "\1\u01a6\107\0\1\136\1\u01a7\1\0\1\u01a7\1\0\2\136"+
    "\1\u01a8\1\136\1\0\1\137\5\136\1\u01a8\13\136\1\0"+
    "\53\136\3\0\1\u0125\1\u0192\1\0\1\u0192\1\0\2\u0125"+
    "\1\0\1\u018f\24\0\34\u0125\1\0\16\u0125\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\1\u01a9"+
    "\33\3\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\4\3\1\u01a9\27\3\1\0"+
    "\16\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\12\3\1\u01aa\21\3\1\0\16\3\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\15\3\1\u01ab\16\3\1\0\16\3\3\0\2\3\1\0"+
    "\1\3\1\0\2\3\1\0\1\77\1\0\1\100\1\77"+
    "\3\0\1\3\6\0\1\77\5\0\1\77\3\3\1\u01ac"+
    "\30\3\1\0\16\3\3\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\1\u01ad\33\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\2\3\1\u01ae\31\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\77\1\0\1\100"+
    "\1\77\3\0\1\3\6\0\1\77\5\0\1\77\4\3"+
    "\1\u01ad\27\3\1\0\16\3\3\0\2\3\1\0\1\3"+
    "\1\0\2\3\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\7\3\1\u01ac\24\3"+
    "\1\0\16\3\3\0\2\3\1\0\1\3\1\0\2\3"+
    "\1\0\1\77\1\0\1\100\1\77\3\0\1\3\6\0"+
    "\1\77\5\0\1\77\6\3\1\u01ae\25\3\1\0\16\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\1\0\1\77"+
    "\1\0\1\100\1\77\3\0\1\3\6\0\1\77\5\0"+
    "\1\77\11\3\1\u01af\22\3\1\0\16\3\3\0\2\3"+
    "\1\0\1\3\1\0\1\u01b0\1\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\34\3\1\0\16\3\4\0\1\u01a4\1\0\1\u01a4\110\0"+
    "\1\u01a6\1\0\1\u01a6\2\0\1\u018e\50\0\1\u018e\33\0"+
    "\1\136\1\u01a7\1\0\1\u01a7\1\0\4\136\1\0\1\137"+
    "\21\136\1\0\53\136\3\0\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\77\1\0\1\100\1\77\3\0\1\3"+
    "\6\0\1\77\5\0\1\77\2\3\1\u01b1\31\3\1\0"+
    "\16\3\3\0\2\3\1\0\1\3\1\0\2\3\1\0"+
    "\1\77\1\0\1\100\1\77\3\0\1\3\6\0\1\77"+
    "\5\0\1\77\6\3\1\u01b1\25\3\1\0\16\3\3\0"+
    "\2\3\1\0\1\3\1\0\2\3\1\0\1\77\1\0"+
    "\1\100\1\77\3\0\1\3\6\0\1\77\5\0\1\77"+
    "\1\u01b2\33\3\1\0\16\3\3\0\2\3\1\0\1\3"+
    "\1\0\2\3\1\0\1\77\1\0\1\100\1\77\3\0"+
    "\1\3\6\0\1\77\5\0\1\77\4\3\1\u01b2\27\3"+
    "\1\0\16\3\2\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[27075];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\72\1\2\11\1\1\1\11\3\1\1\11"+
    "\7\1\1\0\2\1\1\0\4\1\1\0\1\1\1\0"+
    "\1\1\1\0\2\1\1\0\1\1\2\0\1\11\5\1"+
    "\1\0\103\1\1\0\2\1\1\0\1\1\2\0\3\1"+
    "\2\0\12\1\2\0\1\11\2\1\1\0\2\1\1\0"+
    "\2\1\2\0\1\1\1\0\101\1\1\0\3\1\1\0"+
    "\1\1\1\0\1\11\2\1\1\0\7\1\3\0\3\1"+
    "\1\0\1\1\1\0\66\1\1\0\1\1\1\0\6\1"+
    "\1\0\1\1\1\11\37\1\1\0\2\1\2\0\1\1"+
    "\1\0\23\1\1\0\2\1\1\0\12\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[434];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
    public String lexema;
public int GetLine() { return yyline + 1; }


  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  Lexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 206) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      for (zzCurrentPosL = zzStartRead; zzCurrentPosL < zzMarkedPosL;
                                                             zzCurrentPosL++) {
        switch (zzBufferL[zzCurrentPosL]) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          zzR = false;
          break;
        case '\r':
          yyline++;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
          }
          break;
        default:
          zzR = false;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 12: 
          { lexema=yytext(); return llave_abre;
          }
        case 77: break;
        case 48: 
          { lexema=yytext(); return res_exit;
          }
        case 78: break;
        case 54: 
          { lexema=yytext(); return res_wait;
          }
        case 79: break;
        case 51: 
          { lexema=yytext(); return res_name;
          }
        case 80: break;
        case 75: 
          { lexema=yytext(); return res_function;
          }
        case 81: break;
        case 60: 
          { lexema=yytext(); return res_false;
          }
        case 82: break;
        case 32: 
          { lexema=yytext(); return rel_mayor_igual;
          }
        case 83: break;
        case 50: 
          { lexema=yytext(); return res_true;
          }
        case 84: break;
        case 40: 
          { lexema=yytext(); return res_for;
          }
        case 85: break;
        case 44: 
          { lexema=yytext(); return log_xor;
          }
        case 86: break;
        case 3: 
          { lexema=yytext(); return Numero;
          }
        case 87: break;
        case 71: 
          { lexema=yytext(); return tip_tinyint;
          }
        case 88: break;
        case 56: 
          { lexema=yytext(); return res_void;
          }
        case 89: break;
        case 25: 
          { lexema=yytext(); return Numero_incorrecto4;
          }
        case 90: break;
        case 45: 
          { lexema=yytext(); return res_pin;
          }
        case 91: break;
        case 13: 
          { lexema=yytext(); return cor_abre;
          }
        case 92: break;
        case 6: 
          { lexema=yytext(); return Error_simbolo_no_valido;
          }
        case 93: break;
        case 9: 
          { lexema=yytext(); return par_cierra;
          }
        case 94: break;
        case 4: 
          { /*Ignore*/
          }
        case 95: break;
        case 5: 
          { lexema=yytext(); return ari_suma;
          }
        case 96: break;
        case 18: 
          { lexema=yytext(); return rel_menor;
          }
        case 97: break;
        case 66: 
          { lexema=yytext(); return res_output;
          }
        case 98: break;
        case 21: 
          { lexema=yytext(); return sig_punto_coma;
          }
        case 99: break;
        case 19: 
          { lexema=yytext(); return rel_mayor;
          }
        case 100: break;
        case 43: 
          { lexema=yytext(); return res_def;
          }
        case 101: break;
        case 20: 
          { lexema=yytext(); return ari_division;
          }
        case 102: break;
        case 36: 
          { lexema=yytext(); return res_do;
          }
        case 103: break;
        case 33: 
          { lexema=yytext(); return res_in;
          }
        case 104: break;
        case 35: 
          { lexema=yytext(); return log_or;
          }
        case 105: break;
        case 24: 
          { lexema=yytext(); return Numero_incorrecto3;
          }
        case 106: break;
        case 72: 
          { lexema=yytext(); return res_display;
          }
        case 107: break;
        case 28: 
          { lexema=yytext(); return cadena_caracter;
          }
        case 108: break;
        case 37: 
          { lexema=yytext(); return res_end;
          }
        case 109: break;
        case 49: 
          { lexema=yytext(); return res_type;
          }
        case 110: break;
        case 52: 
          { lexema=yytext(); return res_null;
          }
        case 111: break;
        case 69: 
          { lexema=yytext(); return res_return;
          }
        case 112: break;
        case 7: 
          { lexema=yytext(); return ari_multiplicacion;
          }
        case 113: break;
        case 26: 
          { lexema=yytext(); return Error_numerico;
          }
        case 114: break;
        case 10: 
          { lexema=yytext(); return ari_resta;
          }
        case 115: break;
        case 55: 
          { lexema=yytext(); return res_volt;
          }
        case 116: break;
        case 76: 
          { lexema=yytext(); return res_max_volt;
          }
        case 117: break;
        case 63: 
          { lexema=yytext(); return res_sleep;
          }
        case 118: break;
        case 46: 
          { lexema=yytext(); return Numero_incorrecto2;
          }
        case 119: break;
        case 70: 
          { lexema=yytext(); return res_switch;
          }
        case 120: break;
        case 74: 
          { lexema=yytext(); return tip_boolean;
          }
        case 121: break;
        case 39: 
          { lexema=yytext(); return log_not;
          }
        case 122: break;
        case 14: 
          { lexema=yytext(); return cor_cierra;
          }
        case 123: break;
        case 61: 
          { lexema=yytext(); return res_array;
          }
        case 124: break;
        case 65: 
          { lexema=yytext(); return res_while;
          }
        case 125: break;
        case 31: 
          { lexema=yytext(); return rel_diferente;
          }
        case 126: break;
        case 17: 
          { lexema=yytext(); return coma;
          }
        case 127: break;
        case 2: 
          { lexema=yytext(); return Identificador;
          }
        case 128: break;
        case 73: 
          { lexema=yytext(); return res_default;
          }
        case 129: break;
        case 57: 
          { lexema=yytext(); return res_model;
          }
        case 130: break;
        case 16: 
          { lexema=yytext(); return sim_dos_puntos;
          }
        case 131: break;
        case 22: 
          { lexema=yytext(); return Identificador_no_valido;
          }
        case 132: break;
        case 15: 
          { lexema=yytext(); return llave_cierra;
          }
        case 133: break;
        case 34: 
          { lexema=yytext(); return res_if;
          }
        case 134: break;
        case 64: 
          { lexema=yytext(); return res_scale;
          }
        case 135: break;
        case 38: 
          { lexema=yytext(); return tip_int;
          }
        case 136: break;
        case 23: 
          { lexema=yytext(); return Numero_incorrecto1;
          }
        case 137: break;
        case 58: 
          { lexema=yytext(); return res_input;
          }
        case 138: break;
        case 8: 
          { lexema=yytext(); return par_abre;
          }
        case 139: break;
        case 59: 
          { lexema=yytext(); return tip_float;
          }
        case 140: break;
        case 30: 
          { lexema=yytext(); return rel_menor_igual;
          }
        case 141: break;
        case 47: 
          { lexema=yytext(); return res_else;
          }
        case 142: break;
        case 41: 
          { lexema=yytext(); return res_out;
          }
        case 143: break;
        case 62: 
          { lexema=yytext(); return res_start;
          }
        case 144: break;
        case 68: 
          { lexema=yytext(); return res_config;
          }
        case 145: break;
        case 42: 
          { lexema=yytext(); return log_and;
          }
        case 146: break;
        case 29: 
          { lexema=yytext(); return rel_igual;
          }
        case 147: break;
        case 11: 
          { lexema=yytext(); return asi_asignacion;
          }
        case 148: break;
        case 27: 
          { lexema=yytext(); return Error_simbo_punto;
          }
        case 149: break;
        case 1: 
          { lexema=yytext(); return ERROR;
          }
        case 150: break;
        case 53: 
          { lexema=yytext(); return tip_char;
          }
        case 151: break;
        case 67: 
          { lexema=yytext(); return tip_double;
          }
        case 152: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
